PATTERN 1: INVERTED HALF PYRAMID OF "*":

I/P:

#include <stdio.h>
int main() {
   int i, j, rows;
   printf("Enter the number of rows: ");
   scanf("%d", &rows);
   for (i = rows; i >= 1; --i) {
      for (j = 1; j <= i; ++j) {
         printf("* ");
      }
      printf("\n");
   }
   return 0;
}

O/P:

* * * * *
* * * *
* * * 
* *
*

PATTERN 2: FULL PYRAMID OF "$":

I/P:

#include <stdio.h>
int main() {
   int i, space, rows, k = 0;
   printf("Enter the number of rows: ");
   scanf("%d", &rows);
   for (i = 1; i <= rows; ++i, k = 0) {
      for (space = 1; space <= rows - i; ++space) {
         printf("  ");
      }
      while (k != 2 * i - 1) {
         printf("$ ");
         ++k;
      }
      printf("\n");
   }
   return 0;
}

O/P:

        $
      $ $ $
    $ $ $ $ $
  $ $ $ $ $ $ $
$ $ $ $ $ $ $ $ $

PATERN 3: PASCAL'S TRIANGLE:

I/P:

#include <stdio.h>
int main() {
   int rows, coef = 1, space, i, j;
   printf("Enter the number of rows: ");
   scanf("%d", &rows);
   for (i = 0; i < rows; i++) {
      for (space = 1; space <= rows - i; space++)
         printf("  ");
      for (j = 0; j <= i; j++) {
         if (j == 0 || i == 0)
            coef = 1;
         else
            coef = coef * (i - j + 1) / j;
         printf("%4d", coef);
      }
      printf("\n");
   }
   return 0;
}

O/P:

           1
         1   1
       1   2   1
     1   3   3   1
   1  4    6   4   1
 1  5   10   10  5   1
